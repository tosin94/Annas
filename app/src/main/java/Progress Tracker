                       #################################   PROGRESS TRACKER/TO-DO FOR APP DEVELOPMENT ###############################


#### 18th Sept - 25 sept 2017 OBJECTIVES ####

*   Make a gallery for order food. Layout will be like that of just-eat. (possibly be using recycler view as there might be a lot of info to display)
*   ADD another Gallery for the hair stylists ( most likely a listview for this)
*   Add a toast message for when the user adds to the basket
*   Check which areas of the app will be using recycler view and start implementing
*   Research Adequate Database to use (Azure or SQL developer. could also use sql developer for a more visual view of the database
*   Add a logger in error prone and critical areas of the app. (log file will be maintained by a script which will clear file contents periodically)
*   Have a look at implementing Services and Content providers
*   Main page will now be a login screen (Main Activity will now be the login screen) and the old main activity will be page it transitions to when login is successful - sort out later

####    FOR DATABASE    ####

*   finish database on management studio first and then transfer it to sql lite
*   https://developer.android.com/training/basics/data-storage/databases.html
    -   place all database related info in a different package
    -   create a separate class for all the database build queries and a different one to instantiate, run those queries and access the database
    -   try placing database schema in one file (all the strings and table names, etc...), and a file for the database queries and accessing the database. (make fields and etc.. private where necessary)
        -   group queries into methods ( dont necessarily have to follow the way android did the storing queries in strings part )
            e.g public void createTables(){ will contain all the queries for creating all the tables } .....
    -   close database connections on appropriate onDestroy() methods


###############

*   tip from Ramnick -> use an android sqlite database and a server (so local and external server but less expensive network transactions). they will both be in sync and there will not need to be any expensive trasnfer of information such as images itself. instead
the transfer of info could just be things like ID and unique info that can help identify more information

*   ensure that when users perform actions that updates the database, there will be no duplicates or loss of information. ensure all databases are in sync.

###############



